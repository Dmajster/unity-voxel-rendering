#pragma kernel CSMain

#define ARRAY_SIDE_SIZE 8
#define VOXEL_SIZE 1.0f / 8.0f

struct voxel
{
	float4 position;
	float2 size;
	float3 color;
};

RWStructuredBuffer<voxel> voxel_data;

uint GetIndex(uint3 position) {
	return position.y * ARRAY_SIDE_SIZE * ARRAY_SIDE_SIZE + position.z * ARRAY_SIDE_SIZE + position.x;
}

[numthreads(1,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
	if (true) {
		voxel new_voxel = {
			float4(id, 1.0),
			float2(VOXEL_SIZE, 0.0),
			float3(id / 8.0 )
		};

		voxel_data[GetIndex(id)] = new_voxel;
	}
}


